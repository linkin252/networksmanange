# Generated by Django 3.0.2 on 2020-02-22 10:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=80, verbose_name='英文名')),
                ('ChnName', models.CharField(blank=True, max_length=80, null=True, verbose_name='中文名')),
                ('CIcon', models.URLField(blank=True, null=True, verbose_name='图标')),
                ('CWeb', models.URLField(blank=True, null=True, verbose_name='网站')),
                ('CInfo', models.URLField(blank=True, null=True, verbose_name='信息')),
            ],
        ),
        migrations.CreateModel(
            name='Digitizer_gain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Gain', models.CharField(blank=True, default='', max_length=200, verbose_name='增益参数')),
            ],
        ),
        migrations.CreateModel(
            name='Instruments_base',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=160, verbose_name='仪器型号')),
                ('IMainType', models.IntegerField(choices=[(0, ''), (1000, '地震计'), (1001, '检波器'), (1002, '短周期地震计'), (1003, '宽频带地震计'), (1004, '甚宽带地震计'), (1005, '超宽带地震计'), (2000, '加速度计'), (3000, '位移传感器'), (4000, '位移传感器')], default=0, verbose_name='仪器类型')),
                ('IDBOK', models.IntegerField(choices=[(1, ''), (2, '正在定型'), (3, '通过定型')], default=1, verbose_name='定型信息')),
                ('IDir', models.CharField(blank=True, max_length=160, null=True, verbose_name='仪器目录')),
                ('MainChannel', models.IntegerField(default=3, verbose_name='主通道数')),
                ('AuxChannel', models.IntegerField(default=3, verbose_name='辅助通道数')),
                ('ICompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.Company', verbose_name='生产厂商')),
            ],
        ),
        migrations.CreateModel(
            name='National',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=80, verbose_name='英文名')),
                ('ChnName', models.CharField(blank=True, max_length=80, null=True, verbose_name='中文名')),
                ('Icon32', models.URLField(blank=True, null=True, verbose_name='32*32图片链接')),
                ('Icon64', models.URLField(blank=True, null=True, verbose_name='64*64图片链接')),
                ('Icon128', models.URLField(blank=True, null=True, verbose_name='128*128图片链接')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ISensitivityInfo', models.CharField(blank=True, default='', max_length=80, verbose_name='灵敏度信息')),
                ('IParUrl', models.CharField(blank=True, default='', max_length=200, verbose_name='仪器参数')),
                ('IFreqInfo', models.CharField(blank=True, default='', max_length=80, verbose_name='频带信息')),
                ('IGainNormalization', models.FloatField(default=1.0, verbose_name='归一化增益')),
                ('IGain', models.FloatField(default=2000.0, verbose_name='传感器增益')),
                ('ZeroNum', models.IntegerField(default=0, verbose_name='零点数量')),
                ('PoleNum', models.IntegerField(default=0, verbose_name='极点数量')),
            ],
        ),
        migrations.CreateModel(
            name='ZeroPole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nZPMode', models.IntegerField(choices=[(0, '零点'), (1, '极点')], default=0, verbose_name='零极点类型')),
                ('fReal', models.FloatField(default=1.0, verbose_name='实部')),
                ('fImag', models.FloatField(default=1.0, verbose_name='虚部')),
                ('sComplex', models.CharField(default='0+0j', max_length=80, verbose_name='复数显示')),
                ('sensor_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.Sensor_info', verbose_name='仪器信息')),
            ],
        ),
        migrations.CreateModel(
            name='Digitizer_base',
            fields=[
                ('instruments_base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='instruments.Instruments_base')),
            ],
            bases=('instruments.instruments_base',),
        ),
        migrations.CreateModel(
            name='Pole',
            fields=[
                ('zeropole_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='instruments.ZeroPole')),
            ],
            bases=('instruments.zeropole',),
        ),
        migrations.CreateModel(
            name='Sensor_base',
            fields=[
                ('instruments_base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='instruments.Instruments_base')),
            ],
            bases=('instruments.instruments_base',),
        ),
        migrations.CreateModel(
            name='Zero',
            fields=[
                ('zeropole_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='instruments.ZeroPole')),
            ],
            bases=('instruments.zeropole',),
        ),
        migrations.CreateModel(
            name='Digitizer_rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rate', models.CharField(blank=True, default='', max_length=200, verbose_name='速率参数')),
                ('DigitizerGain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.Digitizer_gain', verbose_name='增益参数')),
            ],
        ),
        migrations.CreateModel(
            name='Digitizer_filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Filter', models.CharField(blank=True, default='', max_length=200, verbose_name='滤波参数')),
                ('IParUrl', models.CharField(blank=True, default='', max_length=200, verbose_name='参数目录')),
                ('rate', models.FloatField(default=100.0, verbose_name='采样速率')),
                ('sensitivity', models.FloatField(default=100.0, verbose_name='灵敏度')),
                ('DigitizerRate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.Digitizer_rate', verbose_name='速率参数')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='CNational',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.National', verbose_name='国别'),
        ),
        migrations.CreateModel(
            name='AD_Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(default=1, verbose_name='组合类型')),
                ('ADInfo', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='instruments.Digitizer_filter', verbose_name='数采名称')),
                ('SensorInfo1', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='Sensor_info1', to='instruments.Sensor_info', verbose_name='传感器1')),
                ('SensorInfo2', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='Sensor_info2', to='instruments.Sensor_info', verbose_name='传感器2')),
                ('SensorInfo3', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='Sensor_info3', to='instruments.Sensor_info', verbose_name='传感器3')),
                ('SensorInfo4', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='Sensor_info4', to='instruments.Sensor_info', verbose_name='传感器4')),
            ],
        ),
        migrations.CreateModel(
            name='Graph_base',
            fields=[
                ('digitizer_base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='instruments.Digitizer_base')),
                ('MainLowFreq', models.FloatField(default=0.008333)),
                ('MainHighFreq', models.FloatField(default=50)),
            ],
            bases=('instruments.digitizer_base',),
        ),
        migrations.AddField(
            model_name='sensor_info',
            name='Sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.Sensor_base', verbose_name='传感器型号'),
        ),
        migrations.AddField(
            model_name='digitizer_gain',
            name='Digitizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instruments.Digitizer_base', verbose_name='采集器型号'),
        ),
    ]
